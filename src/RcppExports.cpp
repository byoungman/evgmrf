// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// aldgmrfld0
double aldgmrfld0(arma::mat pars, arma::field<arma::vec> yc, double C, double tau);
RcppExport SEXP _evgmrf_aldgmrfld0(SEXP parsSEXP, SEXP ycSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(aldgmrfld0(pars, yc, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// aldgmrfld1
arma::vec aldgmrfld1(arma::mat pars, arma::field<arma::vec> yc, double C, double tau);
RcppExport SEXP _evgmrf_aldgmrfld1(SEXP parsSEXP, SEXP ycSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(aldgmrfld1(pars, yc, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// aldgmrfld2
arma::sp_mat aldgmrfld2(arma::mat pars, arma::field<arma::vec> yc, double C, double tau);
RcppExport SEXP _evgmrf_aldgmrfld2(SEXP parsSEXP, SEXP ycSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(aldgmrfld2(pars, yc, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// ald0
double ald0(arma::vec pars, arma::vec yv, double C, double tau);
RcppExport SEXP _evgmrf_ald0(SEXP parsSEXP, SEXP yvSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ald0(pars, yv, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// ald1
arma::vec ald1(arma::vec pars, arma::vec yv, double C, double tau);
RcppExport SEXP _evgmrf_ald1(SEXP parsSEXP, SEXP yvSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ald1(pars, yv, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// ald2
arma::mat ald2(arma::vec pars, arma::vec yv, double C, double tau);
RcppExport SEXP _evgmrf_ald2(SEXP parsSEXP, SEXP yvSEXP, SEXP CSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ald2(pars, yv, C, tau));
    return rcpp_result_gen;
END_RCPP
}
// eig1
double eig1(const arma::sp_mat& A);
RcppExport SEXP _evgmrf_eig1(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(eig1(A));
    return rcpp_result_gen;
END_RCPP
}
// tgevgmrfld0
double tgevgmrfld0(arma::mat pars, arma::field<arma::vec> yc, arma::field<arma::vec> wc);
RcppExport SEXP _evgmrf_tgevgmrfld0(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type wc(wcSEXP);
    rcpp_result_gen = Rcpp::wrap(tgevgmrfld0(pars, yc, wc));
    return rcpp_result_gen;
END_RCPP
}
// tgevgmrfld12
arma::mat tgevgmrfld12(arma::mat pars, arma::field<arma::vec> yc, arma::field<arma::vec> wc);
RcppExport SEXP _evgmrf_tgevgmrfld12(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type wc(wcSEXP);
    rcpp_result_gen = Rcpp::wrap(tgevgmrfld12(pars, yc, wc));
    return rcpp_result_gen;
END_RCPP
}
// tgevgmrfldJ
arma::mat tgevgmrfldJ(arma::mat pars, arma::field<arma::vec> yc, arma::field<arma::vec> wc);
RcppExport SEXP _evgmrf_tgevgmrfldJ(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type wc(wcSEXP);
    rcpp_result_gen = Rcpp::wrap(tgevgmrfldJ(pars, yc, wc));
    return rcpp_result_gen;
END_RCPP
}
// tgevgmrfld0_omp
double tgevgmrfld0_omp(arma::mat pars, arma::field<arma::vec> yc, arma::field<arma::vec> wc, int threads);
RcppExport SEXP _evgmrf_tgevgmrfld0_omp(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP, SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type wc(wcSEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(tgevgmrfld0_omp(pars, yc, wc, threads));
    return rcpp_result_gen;
END_RCPP
}
// tgevgmrfld12_omp
arma::mat tgevgmrfld12_omp(arma::mat pars, arma::field<arma::vec> yc, arma::field<arma::vec> wc, int threads);
RcppExport SEXP _evgmrf_tgevgmrfld12_omp(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP, SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type wc(wcSEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(tgevgmrfld12_omp(pars, yc, wc, threads));
    return rcpp_result_gen;
END_RCPP
}
// tgev0
double tgev0(arma::vec pars, arma::vec yv, double delta);
RcppExport SEXP _evgmrf_tgev0(SEXP parsSEXP, SEXP yvSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tgev0(pars, yv, delta));
    return rcpp_result_gen;
END_RCPP
}
// tgev1
arma::vec tgev1(arma::vec pars, arma::vec yv, double delta);
RcppExport SEXP _evgmrf_tgev1(SEXP parsSEXP, SEXP yvSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tgev1(pars, yv, delta));
    return rcpp_result_gen;
END_RCPP
}
// tgev2
arma::mat tgev2(arma::vec pars, arma::vec yv, double delta);
RcppExport SEXP _evgmrf_tgev2(SEXP parsSEXP, SEXP yvSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tgev2(pars, yv, delta));
    return rcpp_result_gen;
END_RCPP
}
// tgpdgmrfld0
double tgpdgmrfld0(arma::mat pars, arma::field<arma::vec> yc);
RcppExport SEXP _evgmrf_tgpdgmrfld0(SEXP parsSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(tgpdgmrfld0(pars, yc));
    return rcpp_result_gen;
END_RCPP
}
// tgpdgmrfld12
arma::mat tgpdgmrfld12(arma::mat pars, arma::field<arma::vec> yc);
RcppExport SEXP _evgmrf_tgpdgmrfld12(SEXP parsSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(tgpdgmrfld12(pars, yc));
    return rcpp_result_gen;
END_RCPP
}
// tgpd0
double tgpd0(arma::vec pars, arma::vec yv);
RcppExport SEXP _evgmrf_tgpd0(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(tgpd0(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// tgpd1
arma::vec tgpd1(arma::vec pars, arma::vec yv);
RcppExport SEXP _evgmrf_tgpd1(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(tgpd1(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// tgpd2
arma::mat tgpd2(arma::vec pars, arma::vec yv);
RcppExport SEXP _evgmrf_tgpd2(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(tgpd2(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// tppugmrfld0
double tppugmrfld0(arma::mat pars, arma::vec uv, double w);
RcppExport SEXP _evgmrf_tppugmrfld0(SEXP parsSEXP, SEXP uvSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type uv(uvSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(tppugmrfld0(pars, uv, w));
    return rcpp_result_gen;
END_RCPP
}
// tppugmrfld12
arma::mat tppugmrfld12(arma::mat pars, arma::vec uv, double w);
RcppExport SEXP _evgmrf_tppugmrfld12(SEXP parsSEXP, SEXP uvSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type uv(uvSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(tppugmrfld12(pars, uv, w));
    return rcpp_result_gen;
END_RCPP
}
// tppzgmrfld0
double tppzgmrfld0(arma::mat pars, arma::field<arma::vec> yc);
RcppExport SEXP _evgmrf_tppzgmrfld0(SEXP parsSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(tppzgmrfld0(pars, yc));
    return rcpp_result_gen;
END_RCPP
}
// tppzgmrfld12
arma::mat tppzgmrfld12(arma::mat pars, arma::field<arma::vec> yc);
RcppExport SEXP _evgmrf_tppzgmrfld12(SEXP parsSEXP, SEXP ycSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::vec> >::type yc(ycSEXP);
    rcpp_result_gen = Rcpp::wrap(tppzgmrfld12(pars, yc));
    return rcpp_result_gen;
END_RCPP
}
// tppu0
double tppu0(arma::vec pars, double u, double w);
RcppExport SEXP _evgmrf_tppu0(SEXP parsSEXP, SEXP uSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(tppu0(pars, u, w));
    return rcpp_result_gen;
END_RCPP
}
// tppu1
arma::vec tppu1(arma::vec pars, double u, double w);
RcppExport SEXP _evgmrf_tppu1(SEXP parsSEXP, SEXP uSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(tppu1(pars, u, w));
    return rcpp_result_gen;
END_RCPP
}
// tppu2
arma::mat tppu2(arma::vec pars, double u, double w);
RcppExport SEXP _evgmrf_tppu2(SEXP parsSEXP, SEXP uSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(tppu2(pars, u, w));
    return rcpp_result_gen;
END_RCPP
}
// tppz0
double tppz0(arma::vec pars, arma::vec zv);
RcppExport SEXP _evgmrf_tppz0(SEXP parsSEXP, SEXP zvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    rcpp_result_gen = Rcpp::wrap(tppz0(pars, zv));
    return rcpp_result_gen;
END_RCPP
}
// tppz1
arma::vec tppz1(arma::vec pars, arma::vec zv);
RcppExport SEXP _evgmrf_tppz1(SEXP parsSEXP, SEXP zvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    rcpp_result_gen = Rcpp::wrap(tppz1(pars, zv));
    return rcpp_result_gen;
END_RCPP
}
// tppz2
arma::mat tppz2(arma::vec pars, arma::vec zv);
RcppExport SEXP _evgmrf_tppz2(SEXP parsSEXP, SEXP zvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    rcpp_result_gen = Rcpp::wrap(tppz2(pars, zv));
    return rcpp_result_gen;
END_RCPP
}
// tpp0
double tpp0(arma::vec pars, arma::vec zv, double w, double u, double delta);
RcppExport SEXP _evgmrf_tpp0(SEXP parsSEXP, SEXP zvSEXP, SEXP wSEXP, SEXP uSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tpp0(pars, zv, w, u, delta));
    return rcpp_result_gen;
END_RCPP
}
// tpp1
arma::vec tpp1(arma::vec pars, arma::vec zv, double w, double u, double delta);
RcppExport SEXP _evgmrf_tpp1(SEXP parsSEXP, SEXP zvSEXP, SEXP wSEXP, SEXP uSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tpp1(pars, zv, w, u, delta));
    return rcpp_result_gen;
END_RCPP
}
// tpp2
arma::mat tpp2(arma::vec pars, arma::vec zv, double w, double u, double delta);
RcppExport SEXP _evgmrf_tpp2(SEXP parsSEXP, SEXP zvSEXP, SEXP wSEXP, SEXP uSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zv(zvSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(tpp2(pars, zv, w, u, delta));
    return rcpp_result_gen;
END_RCPP
}
// tpprocgmrfld0
double tpprocgmrfld0(arma::mat pars, arma::field<double> yc, double mult);
RcppExport SEXP _evgmrf_tpprocgmrfld0(SEXP parsSEXP, SEXP ycSEXP, SEXP multSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<double> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< double >::type mult(multSEXP);
    rcpp_result_gen = Rcpp::wrap(tpprocgmrfld0(pars, yc, mult));
    return rcpp_result_gen;
END_RCPP
}
// tpprocgmrfld12
arma::mat tpprocgmrfld12(arma::mat pars, arma::field<double> yc, double mult);
RcppExport SEXP _evgmrf_tpprocgmrfld12(SEXP parsSEXP, SEXP ycSEXP, SEXP multSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<double> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< double >::type mult(multSEXP);
    rcpp_result_gen = Rcpp::wrap(tpprocgmrfld12(pars, yc, mult));
    return rcpp_result_gen;
END_RCPP
}
// rlargegmrfld0
double rlargegmrfld0(arma::mat pars, arma::field<arma::mat> yc, arma::field<arma::mat> wc);
RcppExport SEXP _evgmrf_rlargegmrfld0(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type wc(wcSEXP);
    rcpp_result_gen = Rcpp::wrap(rlargegmrfld0(pars, yc, wc));
    return rcpp_result_gen;
END_RCPP
}
// rlargegmrfld12
arma::mat rlargegmrfld12(arma::mat pars, arma::field<arma::mat> yc, arma::field<arma::mat> wc);
RcppExport SEXP _evgmrf_rlargegmrfld12(SEXP parsSEXP, SEXP ycSEXP, SEXP wcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type wc(wcSEXP);
    rcpp_result_gen = Rcpp::wrap(rlargegmrfld12(pars, yc, wc));
    return rcpp_result_gen;
END_RCPP
}
// rlarged0
double rlarged0(arma::vec pars, arma::mat yv);
RcppExport SEXP _evgmrf_rlarged0(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(rlarged0(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// rlarged1
arma::vec rlarged1(arma::vec pars, arma::mat yv);
RcppExport SEXP _evgmrf_rlarged1(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(rlarged1(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// rlarged2
arma::mat rlarged2(arma::vec pars, arma::mat yv);
RcppExport SEXP _evgmrf_rlarged2(SEXP parsSEXP, SEXP yvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yv(yvSEXP);
    rcpp_result_gen = Rcpp::wrap(rlarged2(pars, yv));
    return rcpp_result_gen;
END_RCPP
}
// rlargecgmrfld0
double rlargecgmrfld0(arma::mat pars, arma::field<arma::mat> yc, int drop);
RcppExport SEXP _evgmrf_rlargecgmrfld0(SEXP parsSEXP, SEXP ycSEXP, SEXP dropSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< int >::type drop(dropSEXP);
    rcpp_result_gen = Rcpp::wrap(rlargecgmrfld0(pars, yc, drop));
    return rcpp_result_gen;
END_RCPP
}
// rlargecgmrfld12
arma::mat rlargecgmrfld12(arma::mat pars, arma::field<arma::mat> yc, int drop);
RcppExport SEXP _evgmrf_rlargecgmrfld12(SEXP parsSEXP, SEXP ycSEXP, SEXP dropSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type pars(parsSEXP);
    Rcpp::traits::input_parameter< arma::field<arma::mat> >::type yc(ycSEXP);
    Rcpp::traits::input_parameter< int >::type drop(dropSEXP);
    rcpp_result_gen = Rcpp::wrap(rlargecgmrfld12(pars, yc, drop));
    return rcpp_result_gen;
END_RCPP
}
// chol_logdet_solve
Rcpp::List chol_logdet_solve(const Eigen::SparseMatrix<double>& A, const Eigen::VectorXd& b);
RcppExport SEXP _evgmrf_chol_logdet_solve(SEXP ASEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(chol_logdet_solve(A, b));
    return rcpp_result_gen;
END_RCPP
}
// chol_logdet
double chol_logdet(const Eigen::SparseMatrix<double>& A);
RcppExport SEXP _evgmrf_chol_logdet(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(chol_logdet(A));
    return rcpp_result_gen;
END_RCPP
}
// chol_solve_mat
Eigen::MatrixXd chol_solve_mat(const Eigen::SparseMatrix<double>& A, const Eigen::MatrixXd& B);
RcppExport SEXP _evgmrf_chol_solve_mat(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(chol_solve_mat(A, B));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_evgmrf_aldgmrfld0", (DL_FUNC) &_evgmrf_aldgmrfld0, 4},
    {"_evgmrf_aldgmrfld1", (DL_FUNC) &_evgmrf_aldgmrfld1, 4},
    {"_evgmrf_aldgmrfld2", (DL_FUNC) &_evgmrf_aldgmrfld2, 4},
    {"_evgmrf_ald0", (DL_FUNC) &_evgmrf_ald0, 4},
    {"_evgmrf_ald1", (DL_FUNC) &_evgmrf_ald1, 4},
    {"_evgmrf_ald2", (DL_FUNC) &_evgmrf_ald2, 4},
    {"_evgmrf_eig1", (DL_FUNC) &_evgmrf_eig1, 1},
    {"_evgmrf_tgevgmrfld0", (DL_FUNC) &_evgmrf_tgevgmrfld0, 3},
    {"_evgmrf_tgevgmrfld12", (DL_FUNC) &_evgmrf_tgevgmrfld12, 3},
    {"_evgmrf_tgevgmrfldJ", (DL_FUNC) &_evgmrf_tgevgmrfldJ, 3},
    {"_evgmrf_tgevgmrfld0_omp", (DL_FUNC) &_evgmrf_tgevgmrfld0_omp, 4},
    {"_evgmrf_tgevgmrfld12_omp", (DL_FUNC) &_evgmrf_tgevgmrfld12_omp, 4},
    {"_evgmrf_tgev0", (DL_FUNC) &_evgmrf_tgev0, 3},
    {"_evgmrf_tgev1", (DL_FUNC) &_evgmrf_tgev1, 3},
    {"_evgmrf_tgev2", (DL_FUNC) &_evgmrf_tgev2, 3},
    {"_evgmrf_tgpdgmrfld0", (DL_FUNC) &_evgmrf_tgpdgmrfld0, 2},
    {"_evgmrf_tgpdgmrfld12", (DL_FUNC) &_evgmrf_tgpdgmrfld12, 2},
    {"_evgmrf_tgpd0", (DL_FUNC) &_evgmrf_tgpd0, 2},
    {"_evgmrf_tgpd1", (DL_FUNC) &_evgmrf_tgpd1, 2},
    {"_evgmrf_tgpd2", (DL_FUNC) &_evgmrf_tgpd2, 2},
    {"_evgmrf_tppugmrfld0", (DL_FUNC) &_evgmrf_tppugmrfld0, 3},
    {"_evgmrf_tppugmrfld12", (DL_FUNC) &_evgmrf_tppugmrfld12, 3},
    {"_evgmrf_tppzgmrfld0", (DL_FUNC) &_evgmrf_tppzgmrfld0, 2},
    {"_evgmrf_tppzgmrfld12", (DL_FUNC) &_evgmrf_tppzgmrfld12, 2},
    {"_evgmrf_tppu0", (DL_FUNC) &_evgmrf_tppu0, 3},
    {"_evgmrf_tppu1", (DL_FUNC) &_evgmrf_tppu1, 3},
    {"_evgmrf_tppu2", (DL_FUNC) &_evgmrf_tppu2, 3},
    {"_evgmrf_tppz0", (DL_FUNC) &_evgmrf_tppz0, 2},
    {"_evgmrf_tppz1", (DL_FUNC) &_evgmrf_tppz1, 2},
    {"_evgmrf_tppz2", (DL_FUNC) &_evgmrf_tppz2, 2},
    {"_evgmrf_tpp0", (DL_FUNC) &_evgmrf_tpp0, 5},
    {"_evgmrf_tpp1", (DL_FUNC) &_evgmrf_tpp1, 5},
    {"_evgmrf_tpp2", (DL_FUNC) &_evgmrf_tpp2, 5},
    {"_evgmrf_tpprocgmrfld0", (DL_FUNC) &_evgmrf_tpprocgmrfld0, 3},
    {"_evgmrf_tpprocgmrfld12", (DL_FUNC) &_evgmrf_tpprocgmrfld12, 3},
    {"_evgmrf_rlargegmrfld0", (DL_FUNC) &_evgmrf_rlargegmrfld0, 3},
    {"_evgmrf_rlargegmrfld12", (DL_FUNC) &_evgmrf_rlargegmrfld12, 3},
    {"_evgmrf_rlarged0", (DL_FUNC) &_evgmrf_rlarged0, 2},
    {"_evgmrf_rlarged1", (DL_FUNC) &_evgmrf_rlarged1, 2},
    {"_evgmrf_rlarged2", (DL_FUNC) &_evgmrf_rlarged2, 2},
    {"_evgmrf_rlargecgmrfld0", (DL_FUNC) &_evgmrf_rlargecgmrfld0, 3},
    {"_evgmrf_rlargecgmrfld12", (DL_FUNC) &_evgmrf_rlargecgmrfld12, 3},
    {"_evgmrf_chol_logdet_solve", (DL_FUNC) &_evgmrf_chol_logdet_solve, 2},
    {"_evgmrf_chol_logdet", (DL_FUNC) &_evgmrf_chol_logdet, 1},
    {"_evgmrf_chol_solve_mat", (DL_FUNC) &_evgmrf_chol_solve_mat, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_evgmrf(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
